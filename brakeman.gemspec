# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{brakeman}
  s.version = "0.5.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Justin Collins", "Luca Invernizzi"]
  s.date = %q{2011-07-05}
  s.description = %q{Brakeman detects security vulnerabilities in Ruby on Rails applications via static analysis.}
  s.email = ["", "invernizzi.l@gmail.com"]
  s.executables = ["brakeman"]
  s.extra_rdoc_files = [
    "LICENSE",
    "README.md"
  ]
  s.files = [
    "CHANGES",
    "FEATURES",
    "LICENSE",
    "README.md",
    "Rakefile",
    "WARNING_TYPES",
    "bin/brakeman",
    "lib/blessing.rb",
    "lib/brakeman.rb",
    "lib/checks.rb",
    "lib/checks/base_check.rb",
    "lib/checks/check_cross_site_scripting.rb",
    "lib/checks/check_default_routes.rb",
    "lib/checks/check_evaluation.rb",
    "lib/checks/check_execute.rb",
    "lib/checks/check_file_access.rb",
    "lib/checks/check_forgery_setting.rb",
    "lib/checks/check_mail_to.rb",
    "lib/checks/check_mass_assignment.rb",
    "lib/checks/check_model_attributes.rb",
    "lib/checks/check_nested_attributes.rb",
    "lib/checks/check_redirect.rb",
    "lib/checks/check_render.rb",
    "lib/checks/check_send_file.rb",
    "lib/checks/check_session_settings.rb",
    "lib/checks/check_sql.rb",
    "lib/checks/check_validation_regex.rb",
    "lib/format/style.css",
    "lib/processor.rb",
    "lib/processors/alias_processor.rb",
    "lib/processors/base_processor.rb",
    "lib/processors/config_processor.rb",
    "lib/processors/controller_alias_processor.rb",
    "lib/processors/controller_processor.rb",
    "lib/processors/erb_template_processor.rb",
    "lib/processors/erubis_template_processor.rb",
    "lib/processors/haml_template_processor.rb",
    "lib/processors/lib/find_call.rb",
    "lib/processors/lib/find_model_call.rb",
    "lib/processors/lib/processor_helper.rb",
    "lib/processors/lib/rails2_route_processor.rb",
    "lib/processors/lib/rails3_route_processor.rb",
    "lib/processors/lib/render_helper.rb",
    "lib/processors/lib/route_helper.rb",
    "lib/processors/library_processor.rb",
    "lib/processors/model_processor.rb",
    "lib/processors/output_processor.rb",
    "lib/processors/params_processor.rb",
    "lib/processors/route_processor.rb",
    "lib/processors/template_alias_processor.rb",
    "lib/processors/template_processor.rb",
    "lib/report.rb",
    "lib/scanner.rb",
    "lib/tasks/brakeman_tasks.rake",
    "lib/tasks/template/blessed.rb",
    "lib/tracker.rb",
    "lib/util.rb",
    "lib/version.rb",
    "lib/warning.rb",
    "lib/warning_types.rb"
  ]
  s.homepage = %q{http://github.com/invernizzi/brakeman}
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.7.2}
  s.summary = %q{Security vulnerability scanner for Ruby on Rails.}

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<activesupport>, [">= 2.2"])
      s.add_runtime_dependency(%q<ruby2ruby>, [">= 1.2.4"])
      s.add_runtime_dependency(%q<ruport>, [">= 1.6.3"])
      s.add_runtime_dependency(%q<erubis>, [">= 2.6.5"])
      s.add_runtime_dependency(%q<haml>, [">= 3.0.12"])
      s.add_runtime_dependency(%q<sass>, [">= 0"])
    else
      s.add_dependency(%q<activesupport>, [">= 2.2"])
      s.add_dependency(%q<ruby2ruby>, [">= 1.2.4"])
      s.add_dependency(%q<ruport>, [">= 1.6.3"])
      s.add_dependency(%q<erubis>, [">= 2.6.5"])
      s.add_dependency(%q<haml>, [">= 3.0.12"])
      s.add_dependency(%q<sass>, [">= 0"])
    end
  else
    s.add_dependency(%q<activesupport>, [">= 2.2"])
    s.add_dependency(%q<ruby2ruby>, [">= 1.2.4"])
    s.add_dependency(%q<ruport>, [">= 1.6.3"])
    s.add_dependency(%q<erubis>, [">= 2.6.5"])
    s.add_dependency(%q<haml>, [">= 3.0.12"])
    s.add_dependency(%q<sass>, [">= 0"])
  end
end

